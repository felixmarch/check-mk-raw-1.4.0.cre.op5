--- a/src/rrd_daemon.c	2015-08-09 17:18:19.000000000 +0200
+++ b/src/rrd_daemon.c	2015-08-26 14:18:08.010681423 +0200
@@ -103,6 +103,7 @@
 #include <libgen.h>
 #include <grp.h>
 #include <pwd.h>
+#include <wordexp.h>
 
 #ifdef HAVE_LIBWRAP
 #include <tcpd.h>
@@ -112,14 +113,46 @@
 #include <glib.h>
 /* }}} */
 
+#define LOGFILE_PATH "~/var/log/rrdcached.log"
+#define DATE_FORMAT  "%Y-%m-%d %H:%M:%S "
+char g_logfile_path[512]; // Contains expanded path
+char g_date[32];
+
+void log_to_file(char* format, ...);
+void set_logfile_path(void);
+
 #define RRDD_LOG(severity, ...) \
   do { \
     if (stay_foreground) { \
       fprintf(stderr, __VA_ARGS__); \
       fprintf(stderr, "\n"); } \
-    syslog ((severity), __VA_ARGS__); \
+    log_to_file(__VA_ARGS__); \
   } while (0)
 
+void log_to_file(char* format, ...)
+{
+    va_list ap;
+    va_start(ap, format);
+
+    time_t now = time(NULL);
+    FILE *logfile_fd = fopen(g_logfile_path, "a+");
+    strftime(g_date, sizeof(g_date), DATE_FORMAT, gmtime(&now));
+    fprintf(logfile_fd, g_date, NULL);
+    vfprintf(logfile_fd, format, ap);
+    va_end(ap);
+
+    fprintf(logfile_fd, "\n");
+    fflush(logfile_fd);
+    fclose(logfile_fd);
+}
+
+void set_logfile_path(void) 
+{
+  wordexp_t exp_result;
+  wordexp(LOGFILE_PATH, &exp_result, 0);
+  strncpy(g_logfile_path, exp_result.we_wordv[0], sizeof(g_logfile_path));
+}
+
 #if defined(__FreeBSD__) || defined(__APPLE__)
 #define RRD_LISTEN_BACKLOG -1
 #else
@@ -4337,6 +4370,9 @@
 {
   int status;
 
+  // Determine logfile path within user directory
+  set_logfile_path();
+
   status = read_options (argc, argv);
   if (status != 0)
   {
